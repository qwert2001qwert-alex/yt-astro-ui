---
import WidgetWrapper from 'yt-astro-ui/astro/container/WidgetWrapper.astro'
import Headline from 'yt-astro-ui/astro/headline/Headline.astro'
import ItemGrid0 from 'yt-astro-ui/astro/grid/ItemGrid0.astro'
import Card1 from 'yt-astro-ui/astro/card/Card1.astro'
import type { Props as ICard1 } from 'yt-astro-ui/astro/card/Card1.astro'
import type { ICard, IWidget, IHeadline } from 'yt-astro-ui/types'

export interface Props extends Omit<IHeadline, 'classes'>, IWidget {
  items?: ICard1[];
  columns?: number;
  isBeforeContent?: boolean;
  isAfterContent?: boolean;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 4,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid0 columns={columns}>
    {
      items && items.map((item: ICard) => (
        <Card1 {...item} />
      ))
    }
  </ItemGrid0>
</WidgetWrapper>
