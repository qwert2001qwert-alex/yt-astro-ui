---
import type { IFeatures as Props, IItem } from 'yt-astro-ui/types'
import WidgetWrapper from 'yt-astro-ui/astro/container/WidgetWrapper.astro'
import Headline from 'yt-astro-ui/astro/headline/Headline.astro'
import ItemGrid0 from 'yt-astro-ui/astro/grid/ItemGrid0.astro'
import Item from 'yt-astro-ui/astro/grid/Item.astro'

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 4,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid0 columns={columns}>
    {
      items && items.map((item: IItem) => (
        <Item {...item}>
          <Fragment slot="description">
            {
              item?.links && (
                <div class="flex flex-col mt-4">
                  {item?.links.map((link) => (
                    <a
                      href={link.href}
                      class="font-semibold underline text-primary transition-colors hover:text-primary/80"
                    >
                      {link.text}
                    </a>
                  ))}
                </div>
              )}
          </Fragment>
        </Item>
      ))
    }
  </ItemGrid0>
</WidgetWrapper>
